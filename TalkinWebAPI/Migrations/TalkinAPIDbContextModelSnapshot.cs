// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalkinWebAPI.Data;

#nullable disable

namespace TalkinWebAPI.Migrations
{
    [DbContext(typeof(TalkinAPIDbContext))]
    partial class TalkinAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TalkinWebAPI.Models.Conversation", b =>
                {
                    b.Property<Guid>("conversation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("msg_IDmessage_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("user1_IDuser_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("user2_IDuser_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("conversation_ID");

                    b.HasIndex("msg_IDmessage_ID");

                    b.HasIndex("user1_IDuser_ID");

                    b.HasIndex("user2_IDuser_ID");

                    b.ToTable("Conversation");
                });

            modelBuilder.Entity("TalkinWebAPI.Models.Message", b =>
                {
                    b.Property<Guid>("message_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("message_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("receiver_IDuser_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("sender_IDuser_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("message_ID");

                    b.HasIndex("receiver_IDuser_ID");

                    b.HasIndex("sender_IDuser_ID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("TalkinWebAPI.Models.User", b =>
                {
                    b.Property<Guid>("user_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TalkinWebAPI.Models.Conversation", b =>
                {
                    b.HasOne("TalkinWebAPI.Models.Message", "msg_ID")
                        .WithMany()
                        .HasForeignKey("msg_IDmessage_ID");

                    b.HasOne("TalkinWebAPI.Models.User", "user1_ID")
                        .WithMany()
                        .HasForeignKey("user1_IDuser_ID");

                    b.HasOne("TalkinWebAPI.Models.User", "user2_ID")
                        .WithMany()
                        .HasForeignKey("user2_IDuser_ID");

                    b.Navigation("msg_ID");

                    b.Navigation("user1_ID");

                    b.Navigation("user2_ID");
                });

            modelBuilder.Entity("TalkinWebAPI.Models.Message", b =>
                {
                    b.HasOne("TalkinWebAPI.Models.User", "receiver_ID")
                        .WithMany()
                        .HasForeignKey("receiver_IDuser_ID");

                    b.HasOne("TalkinWebAPI.Models.User", "sender_ID")
                        .WithMany()
                        .HasForeignKey("sender_IDuser_ID");

                    b.Navigation("receiver_ID");

                    b.Navigation("sender_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
